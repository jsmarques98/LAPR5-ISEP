{
	"info": {
		"_postman_id": "2b42787a-fdbe-48b8-bdff-dfe037cb8df2",
		"name": "SectionsTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23425291"
	},
	"item": [
		{
			"name": "Test Post Sections Copy",
			"item": [
				{
					"name": "Get Section to be created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Section to be created should return 404\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\" : \"1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections",
								"id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Warehouse For Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Warehouse to add to Section should return 201\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\":\"5\",\r\n   \"designation\":\"a\",\r\n    \"street\":\"a\",\r\n     \"doorNumber\":\"1\",\r\n      \"postCode\":\"1\",\r\n       \"city\":\"1\",\r\n       \"latitude\":\"1\",\r\n       \"longitude\":\"1\",\r\n       \"altitude\":\"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/warehouses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Warehouse For Section Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Warehouse to add to Section should return 201\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\":\"6\",\r\n   \"designation\":\"aa\",\r\n    \"street\":\"aa\",\r\n     \"doorNumber\":\"2\",\r\n      \"postCode\":\"2\",\r\n       \"city\":\"2\",\r\n       \"latitude\":\"2\",\r\n       \"longitude\":\"2\",\r\n       \"altitude\":\"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/warehouses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\":\"1\",\r\n   \"duration\":\"1\",\r\n    \"distance\":\"1\",\r\n    \"energySpent\":\"1\",\r\n    \"extraTime\":\"1\",\r\n    \"warehouseOrigin\":\"5\",\r\n    \"warehouseDestiny\":\"6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Created Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Created Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Created Delivery right data \", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.id).to.eql(\"1\");\r",
									"  pm.expect(responseJson.duration).to.eql(1);\r",
									"  pm.expect(responseJson.distance).to.eql(1);\r",
									"  pm.expect(responseJson.energySpent).to.eql(1);\r",
									"  pm.expect(responseJson.extraTime).to.eql(1);\r",
									"  pm.expect(responseJson.warehouseOrigin).to.eql(\"5\");\r",
									"  pm.expect(responseJson.warehouseDestiny).to.eql(\"6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":\"1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections",
								"id"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Get Sections Copy",
			"item": [
				{
					"name": "Post Warehouse For Section Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Warehouse to add to Delivery should return 201\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"Id\":\"7\",\r\n   \"Designation\":\"a\",\r\n    \"Street\":\"a\",\r\n     \"DoorNumber\":\"1\",\r\n      \"PostCode\":\"1\",\r\n       \"City\":\"1\",\r\n       \"Latitude\":\"1\",\r\n       \"Longitude\":\"1\",\r\n       \"Altitude\":\"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/warehouses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Warehouse For Section Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Warehouse to add to Delivery should return 201\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"Id\":\"8\",\r\n   \"Designation\":\"aa\",\r\n    \"Street\":\"aa\",\r\n     \"DoorNumber\":\"2\",\r\n      \"PostCode\":\"2\",\r\n       \"City\":\"2\",\r\n       \"Latitude\":\"2\",\r\n       \"Longitude\":\"2\",\r\n       \"Altitude\":\"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/warehouses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\":\"2\",\r\n   \"duration\":\"1\",\r\n    \"distance\":\"1\",\r\n    \"energySpent\":\"1\",\r\n    \"extraTime\":\"1\",\r\n    \"warehouseOrigin\":\"7\",\r\n    \"warehouseDestiny\":\"8\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Created Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Created Delivery right data \", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.id).to.eql(\"1\");\r",
									"  pm.expect(responseJson.duration).to.eql(1);\r",
									"  pm.expect(responseJson.distance).to.eql(1);\r",
									"  pm.expect(responseJson.energySpent).to.eql(1);\r",
									"  pm.expect(responseJson.extraTime).to.eql(1);\r",
									"  pm.expect(responseJson.warehouseOrigin).to.eql(\"5\");\r",
									"  pm.expect(responseJson.warehouseDestiny).to.eql(\"6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\" :\"1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections",
								"id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Sections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Created Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/sections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Put Deliveries Copy",
			"item": [
				{
					"name": "Get Section To Be Updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Created Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Created Delivery right data \", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.id).to.eql(\"1\");\r",
									"  pm.expect(responseJson.duration).to.eql(1);\r",
									"  pm.expect(responseJson.distance).to.eql(1);\r",
									"  pm.expect(responseJson.energySpent).to.eql(1);\r",
									"  pm.expect(responseJson.extraTime).to.eql(1);\r",
									"  pm.expect(responseJson.warehouseOrigin).to.eql(\"5\");\r",
									"  pm.expect(responseJson.warehouseDestiny).to.eql(\"6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\" :\"1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections",
								"id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\":\"1\",\r\n   \"duration\":\"2\",\r\n    \"distance\":\"2\",\r\n    \"energySpent\":\"2\",\r\n    \"extraTime\":\"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Updated Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Created Delivery should return 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Created Delivery right data \", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.id).to.eql(\"1\");\r",
									"  pm.expect(responseJson.duration).to.eql(2);\r",
									"  pm.expect(responseJson.distance).to.eql(2);\r",
									"  pm.expect(responseJson.energySpent).to.eql(2);\r",
									"  pm.expect(responseJson.extraTime).to.eql(2);\r",
									"  pm.expect(responseJson.warehouseOrigin).to.eql(\"5\");\r",
									"  pm.expect(responseJson.warehouseDestiny).to.eql(\"6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\" :\"1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sections/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sections",
								"id"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}